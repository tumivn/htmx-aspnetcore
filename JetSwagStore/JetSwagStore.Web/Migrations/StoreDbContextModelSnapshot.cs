// <auto-generated />
using System;
using JetSwagStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JetSwagStore.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    partial class StoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsId")
                        .HasColumnType("integer");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");

                    b.HasData(
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 1
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 2
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 3
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 4
                        },
                        new
                        {
                            CategoriesId = 5,
                            ProductsId = 4
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 5
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 6
                        },
                        new
                        {
                            CategoriesId = 5,
                            ProductsId = 6
                        },
                        new
                        {
                            CategoriesId = 4,
                            ProductsId = 7
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 8
                        },
                        new
                        {
                            CategoriesId = 5,
                            ProductsId = 8
                        },
                        new
                        {
                            CategoriesId = 3,
                            ProductsId = 9
                        });
                });

            modelBuilder.Entity("JetSwagStore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Sort")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = ".NET",
                            Sort = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Other",
                            Sort = 5
                        },
                        new
                        {
                            Id = 3,
                            Name = "Web",
                            Sort = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Java",
                            Sort = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Performance",
                            Sort = 4
                        });
                });

            modelBuilder.Entity("JetSwagStore.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExternalPaymentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PurchasedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ShippingCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShippingCountry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShippingPostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShippingStateOrProvince")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShippingStreet")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("JetSwagStore.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductOptionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("JetSwagStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CurrentInventory")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("DiscountPrice")
                        .HasColumnType("double precision");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "JetBrains Rider, the premiere IDE for .NET developers. Show folks your love for Rider with this stylish T-Shirt.",
                            ImageUrl = "Rider.jpg",
                            Manufacturer = "JetBrains",
                            Name = "Rider T-Shirt",
                            Price = 35.0
                        },
                        new
                        {
                            Id = 2,
                            CurrentInventory = 100,
                            Description = "AppCode for building your iOS applications without the need for XCode. Looking so swift in this cotton shirt.",
                            ImageUrl = "AppCode.jpg",
                            Manufacturer = "JetBrains",
                            Name = "AppCode T-Shirt",
                            Price = 35.0
                        },
                        new
                        {
                            Id = 3,
                            CurrentInventory = 100,
                            Description = "Look stylish in this 100% cotton T-Shirt while dropping tables like a boss. DataGrip users represent!",
                            ImageUrl = "DataGrip.jpg",
                            Manufacturer = "JetBrains",
                            Name = "DataGrip T-Shirt",
                            Price = 40.0
                        },
                        new
                        {
                            Id = 4,
                            CurrentInventory = 100,
                            Description = "Allocate a few dollars to your style while finding pesky memory leaks in this one-of-a-kind T-Shirt.",
                            ImageUrl = "DotMemory.jpg",
                            Manufacturer = "JetBrains",
                            Name = "DotMemory T-Shirt",
                            Price = 30.0
                        },
                        new
                        {
                            Id = 5,
                            CurrentInventory = 100,
                            Description = "Be sure to add this to your clothes library. You'll have everyone taking a peek at this stylish T-shirt.",
                            ImageUrl = "DotPeek.jpg",
                            Manufacturer = "JetBrains",
                            Name = "DotPeek T-Shirt",
                            Price = 40.0
                        },
                        new
                        {
                            Id = 6,
                            CurrentInventory = 100,
                            Description = "The snug fit T-Shirt will trace around your physique perfectly. One of the most comfortable shirts you'll own.",
                            ImageUrl = "DotTrace.jpg",
                            Manufacturer = "JetBrains",
                            Name = "DotTrace T-Shirt",
                            Price = 30.0
                        },
                        new
                        {
                            Id = 7,
                            Description = "Look Intelli-cute in this 100% cotton T-Shirt. Java never looked this good.",
                            DiscountPrice = 30.0,
                            ImageUrl = "IntelliJ.jpg",
                            Manufacturer = "JetBrains",
                            Name = "IntelliJ T-Shirt",
                            Price = 40.0
                        },
                        new
                        {
                            Id = 8,
                            CurrentInventory = 100,
                            Description = "Not only C#, but look sharp in this forward-thinking design. Stand-out in this beautifully crafted attire.",
                            DiscountPrice = 30.0,
                            ImageUrl = "ReSharper.jpg",
                            Manufacturer = "JetBrains",
                            Name = "ReSharper T-Shirt",
                            Price = 40.0
                        },
                        new
                        {
                            Id = 9,
                            CurrentInventory = 100,
                            Description = "Storm the web scene with this one-of-a-kind outfit. Import this T-shirt into your collection right away.",
                            ImageUrl = "WebStorm.jpg",
                            Manufacturer = "JetBrains",
                            Name = "WebStorm T-Shirt",
                            Price = 30.0
                        });
                });

            modelBuilder.Entity("JetSwagStore.Models.ProductOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("AdditionalCost")
                        .HasColumnType("double precision");

                    b.Property<int>("CurrentInventory")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOption");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionalCost = 0.0,
                            CurrentInventory = 20,
                            Name = "Small",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            AdditionalCost = 0.0,
                            CurrentInventory = 20,
                            Name = "Medium",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            AdditionalCost = 5.0,
                            CurrentInventory = 20,
                            Name = "Large",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 4,
                            AdditionalCost = 10.0,
                            CurrentInventory = 20,
                            Name = "X-Large",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 5,
                            AdditionalCost = 20.0,
                            CurrentInventory = 20,
                            Name = "XX-Large",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 6,
                            AdditionalCost = 0.0,
                            CurrentInventory = 20,
                            Name = "Small",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 7,
                            AdditionalCost = 0.0,
                            CurrentInventory = 20,
                            Name = "Medium",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            AdditionalCost = 5.0,
                            CurrentInventory = 20,
                            Name = "Large",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 9,
                            AdditionalCost = 10.0,
                            CurrentInventory = 20,
                            Name = "X-Large",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 10,
                            AdditionalCost = 20.0,
                            CurrentInventory = 20,
                            Name = "XX-Large",
                            ProductId = 7
                        });
                });

            modelBuilder.Entity("JetSwagStore.Models.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("JetSwagStore.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProductOptionId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("ShoppingCartId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductOptionId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ShoppingCartItem");
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("JetSwagStore.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JetSwagStore.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JetSwagStore.Models.OrderItem", b =>
                {
                    b.HasOne("JetSwagStore.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JetSwagStore.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("JetSwagStore.Models.ProductOption", b =>
                {
                    b.HasOne("JetSwagStore.Models.Product", "Product")
                        .WithMany("Options")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("JetSwagStore.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("JetSwagStore.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("JetSwagStore.Models.ProductOption", "Option")
                        .WithMany()
                        .HasForeignKey("ProductOptionId");

                    b.HasOne("JetSwagStore.Models.ShoppingCart", null)
                        .WithMany("Items")
                        .HasForeignKey("ShoppingCartId");

                    b.Navigation("Option");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("JetSwagStore.Models.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("JetSwagStore.Models.Product", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("JetSwagStore.Models.ShoppingCart", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
